@using GPNA.AlarmControlSystem.Models.Enums
@using Microsoft.AspNetCore.Components
@using GPNA.AlarmControlSystem.Interfaces
@using GPNA.AlarmControlSystem.Models.Dto.BufferAlarms
@using GPNA.AlarmControlSystem.Models.Dto.SuppressedAlarm
@inject IJSRuntime JSRuntime


@if(Tag is {TagName: { } })
{
    <tr class="item-table " @onclick="ShowMoreattributes" style="cursor:pointer;">        
        <td>@Tag.DateTimeActivation.ToString("d")</td>
        <td>@Tag.DateTimeActivation.ToString("t")</td>                  
        <td class="@_styleTr">@(Tag!=null && Tag.Duration!=null ? Tag.Duration.Value.TotalHours.ToString("N") : "N/A")</td>
        <td colspan=1>@(Tag.TagName)
            @{
                string color = "";
                if (Tag.State is StateType.HH or StateType.LL)
                { color = "#EB3333"; }                    
                if (Tag.State is StateType.H or StateType.L)
                { color = "#F38B01"; } 
            }
            @if (Tag.State != StateType.none)
            { <span >_<b style="color: @color;">@Tag.State</b></span> }
        </td> 
    
        <td colspan="4">@(Tag.Description ??= "N/A")</td>
        <td>@Tag.Priority</td>
        <td>@(Tag.AlarmLimit ?? "N/A") / @(Tag.Value ?? "N/A")</td>         
    </tr>
             
    @if (_displayMore || !string.IsNullOrEmpty(Tag.Comment))
    {
        <tr>
            <td colspan="10" class="p-0 m-0">
                <input type="text" style="margin:0;padding:5px 10px;width:100%" @bind="Tag.Comment" @bind:event="oninput" @onkeydown="SaveComment">
            </td>                        
        </tr>
    }
} 
@code
{
    [Inject] IBufferAlarmService AlarmService { get; set; } = null!;
    [Parameter] public SuppressedAlarmDto? Tag { get; set; }

    bool _displayMore = false;
    string _styleTr = "";

    protected override void OnInitialized()
    {
        if (Tag?.Duration != null && Tag.Duration.Value.TotalHours > 720)
        {
            _styleTr = "item-table--alert";

        }
    }

    void ShowMoreattributes()
    {
        _displayMore = !_displayMore;
    }

    private async Task SaveComment(KeyboardEventArgs e)
    {
        if (e.Code is "Enter" or "NumpadEnter")
        {
            if (Tag?.Comment != null)
            {
                await AlarmService.AddComment(Tag.Id, Tag.Comment);
                await JSRuntime.InvokeVoidAsync("saveComment", "snackbar");
            }
        }
    }
}