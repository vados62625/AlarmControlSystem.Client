@using LocalDbStorage.Interfaces
@using Microsoft.AspNetCore.Components
@using LocalDbStorage.Repositories.Models
@using LocalDbStorage.Dto
@inject IJSRuntime JSRuntime

@if(Tag!=null && Tag.TagName!=null && Tag.Description!="ПЕРЕСМЕНКА")
{
    <tr class="item-table" @onclick="ShowMoreattributes" style="cursor:pointer;">        
        <td>@Tag.DateTime.ToString("d")</td>
        <td>@Tag.DateTime.ToString("t")</td>
        
        @if (Tag.TagName.EndsWith("LL") || Tag.TagName.EndsWith("HH"))
        {
            <td>@Tag.TagName.Substring(0,Tag.TagName.Length - 2)<span style="color: #EB3333;font-weight:700;">@Tag.TagName.Substring(Tag.TagName.Length-2)</span></td>
        }
        else if (Tag.TagName.EndsWith("L") || Tag.TagName.EndsWith("H"))
        {
            <td>@Tag.TagName.Substring(0,Tag.TagName.Length - 1)<span style="color: #F38B01;font-weight:700;">@Tag.TagName.Substring(Tag.TagName.Length-1)</span></td>
        }
        else
        {
            <td>@Tag.TagName</td>
        } 
    
        @if (Tag.Description != null)
        {
            <td colspan=4>@(Tag.Description ??= "N/A")</td>
        }
        else
        {
            <td colspan=4>N/A</td>
        }

        @if (Tag.Priority != null)
        {
            <td>@(Tag.Priority)</td>
        }
        else
        {
            <td>N/A</td>
        }

        @if (Tag.AlarmLimit != null && Tag.Value!=null)
        {
            <td>@(Tag.AlarmLimit+" / "+Tag.Value)</td>
        }
        else if(Tag.AlarmLimit != null)
        {
            <td>@(Tag.AlarmLimit+" / N/A")</td>
        } 
        else if(Tag.Value != null)
        {
            <td>@("N/A / " + Tag.Value)</td>
        }
        else
        {
            <td>N/A / N/A</td>
        }
              
        <td style="text-align: right;">@List.Count</td>   
        @if (Tag.Test != null)
        {
             <td style="text-align: center;"><input type="checkbox" @bind="@Tag.Test" /></td>
        }
        else 
        {
            <td>N/A</td>
        } 
    </tr>                 
@if (displayMore || (Tag.Comment!=null && Tag.Comment.Length>0))
{
    <tr>
        <td colspan="11" class="p-0 m-0">
            <input type="text" style="margin:0;padding:5px 10px;width:100%" @bind="Tag.Comment" @bind:event="oninput" @onkeydown="SaveComment">
        </td>                        
    </tr>
    }
} 
else if (Tag!=null && Tag.Description!=null && Tag.Description == "ПЕРЕСМЕНКА")
{
    <tr class="item-table">        
        <td>@Tag.DateTime.ToString("d")</td>
        <td>@Tag.DateTime.ToString("t")</td>    
        @if (Tag.Description != null)
        {
            <td colspan=9 style="text-align:center;font-weight:700;letter-spacing:10px;">@(Tag.Description ??= "N/A")</td>
        }        
    </tr>   
}
@code
{
    [Inject] IIncomingAlarmService IncomingAlarmService { get; set; } = null!;

    [Parameter] public List<IncomingAlarmDto>? List { get; set; } = new();
    [Parameter] public IncomingAlarmDto? Tag { get; set; }

    bool displayMore = false;

    protected override void OnInitialized()    
    {
        Tag = List[List.Count - 1];
    }

    private async Task SaveComment(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await IncomingAlarmService.UpdateAlarm(Tag);
            await JSRuntime.InvokeVoidAsync("saveComment", "snackbar");
        }
    }

    void ShowMoreattributes()
    {
        displayMore = !displayMore;
    }
}