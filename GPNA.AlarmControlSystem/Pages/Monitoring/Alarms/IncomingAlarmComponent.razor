@using Microsoft.AspNetCore.Components
@using GPNA.AlarmControlSystem.Models.Enums
@using GPNA.AlarmControlSystem.Interfaces
@using GPNA.AlarmControlSystem.Models.Dto.BufferAlarms
@inject IJSRuntime JSRuntime

@if(Tag!=null && Tag.TagName!=null && Tag.Description!="ПЕРЕСМЕНКА")
{    
    string bgColor = ""; if (IsChildren) { bgColor = "rgba(0, 32, 51, 0.05);"; } 
    
    <tr class="item-table" style="cursor:pointer; background-color: @bgColor;">        
        <td @onclick="ShowMoreAttributes">@Tag.DateTime.ToString("d")</td>
        <td @onclick="ShowMoreAttributes">@Tag.DateTime.ToString("t")</td>

        <td colspan=3 @onclick="ShowMoreAttributes">@(Tag.TagName)
            @{
                string color = "";
                if (Tag.State == StateType.HH || Tag.State == StateType.LL)
                { color = "#EB3333"; }                    
                if (Tag.State == StateType.H || Tag.State == StateType.L)
                { color = "#F38B01"; } 
            }
            @if (Tag.State != StateType.none)
            { <span >_<b style="color: @color;">@Tag.State</b></span> }
        </td>
        <td colspan=4 @onclick="ShowMoreAttributes"> @((Tag.Description != null) ? Tag.Description : "N/A") </td>
        <td @onclick="ShowMoreAttributes">@Tag.Priority</td>
        <td @onclick="ShowMoreAttributes">@((Tag.AlarmLimit != null) ? Tag.AlarmLimit : "N/A") / @((Tag.Value != null) ? Tag.Value : "N/A")</td>              
        <td class="item-table__count" @onclick="ShowListAlarms">@((IsChildren) ? "" : (List?.Count ?? -1))</td>
        <td class="item-table__checkbox" @onclick="SendTest"><input class="item-table__checkbox-input" type="checkbox" checked="@(Tag.StatusAlarm==StatusAlarmType.InWork)"/></td>
    </tr>
    
    @if (displayComment || (Tag.Comment!=null && Tag.Comment.Length>0))
    {
        <tr>
            <td colspan="13" class="p-0 m-0">
                <input type="text" style="margin:0;padding:5px 10px;width:100%" @bind="Tag.Comment" @bind:event="oninput" @onkeydown="SaveComment">
            </td>                        
        </tr>
    }

    @if (displayList && List?.Count>1)
    {
        for (int i = List.Count-2; i >=0; i--)
        {
           <IncomingAlarmComponent Tag="List[i]" IsChildren = "true"/> 
        }
        
    }

} 
else if (Tag!=null && Tag.Description!=null && Tag.Description == "ПЕРЕСМЕНКА")
{
    <tr class="item-table">        
        <td>@Tag.DateTime.ToString("d")</td>
        <td>@Tag.DateTime.ToString("t")</td>        
        <td colspan=11 style="text-align:center;font-weight:700;letter-spacing:10px;">@Tag.Description</td>              
    </tr>   
}
@code
{
    [Inject] IBufferAlarmService AlarmService { get; set; } = null!;

    [Parameter] public List<IncomingAlarmDto>? List { get; set; } = new();
    [Parameter] public IncomingAlarmDto? Tag { get; set; }
    [Parameter] public bool IsChildren { get; set; } = false;

    bool displayComment = false;
    bool displayList = false;

    protected override void OnInitialized()    
    {
        if (List?.Count>0)
        {
            if (Tag == null)
            {
                Tag = List[List.Count - 1];
            }  
            
            List = List.OrderByDescending(c => c.DateTime).ToList();
        }        
    }

    private async Task SaveComment(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await AlarmService.UpdateAlarm(Tag);
            await JSRuntime.InvokeVoidAsync("saveComment", "snackbar");
        }
    }

    private async Task SendTest()
    {
        if (Tag.StatusAlarm == StatusAlarmType.Undefined)
        {
            Tag.StatusAlarm = StatusAlarmType.InWork;
        }
        else
        {
            Tag.StatusAlarm = StatusAlarmType.Undefined;
        }
        await AlarmService.UpdateAlarm(Tag);
        await JSRuntime.InvokeVoidAsync("saveComment", "snackbar");

    }

    void ShowMoreAttributes()
    {
        displayComment = !displayComment;
    }

    void ShowListAlarms()
    {
        displayList = !displayList;
    }
}