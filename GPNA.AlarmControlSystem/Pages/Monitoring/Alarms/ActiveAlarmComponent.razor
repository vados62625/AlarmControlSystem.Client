@using Microsoft.AspNetCore.Components
@using GPNA.AlarmControlSystem.Models.Enums
@using GPNA.AlarmControlSystem.Interfaces
@using GPNA.AlarmControlSystem.Models.Dto.BufferAlarms
@inject IJSRuntime JSRuntime

@if(Tag!=null && Tag.TagName!=null)
{
    <tr class="item-table" @onclick="ShowMoreattributes" style="cursor:pointer;">        
        <td>@Tag.DateTime.ToString("d") @Tag.DateTime.ToString("t")</td>
        <td class="@styleTr">@(Tag.Duration.Value.TotalHours.ToString("N") ?? "N/A")</td>        
       
        <td colspan=2>@(Tag.TagName)
            @{
                string color = "";
                if (Tag.State == StateType.HH || Tag.State == StateType.LL)
                { color = "#EB3333"; }                    
                if (Tag.State == StateType.H || Tag.State == StateType.L)
                { color = "#F38B01"; } 
            }
            @if (Tag.State != StateType.none)
            { <span >_<b style="color: @color;">@Tag.State</b></span> }
        </td>
    
        <td colspan=4>@(Tag.Description ??= "N/A")</td>
        <td>@Tag.Priority</td>
        <td>@((Tag.AlarmLimit != null) ? Tag.AlarmLimit : "N/A") / @((Tag.Value != null) ? Tag.Value : "N/A")</td>     
    </tr> 
    
    @if (displayMore || (Tag.Comment!=null && Tag.Comment.Length>0))
    {
        <tr>
            <td colspan="10" class="p-0 m-0">
                <input type="text" style="margin:0;padding:5px 10px;width:100%" @bind="Tag.Comment" @bind:event="oninput" @onkeydown="SaveComment">
            </td>                        
        </tr>
    }
} 
@code
{
    [Inject] IBufferAlarmService AlarmService { get; set; } = null!;

    [Parameter] public ActiveAlarmDto? Tag { get; set; }

    bool displayMore = false;
    string styleTr = "";


    protected override void OnInitialized()
    {
        if (Tag!=null)
            if (Tag.Duration!=null && Tag.Duration.Value.TotalHours > 72)
            {
                styleTr = "item-table--alert";
            }
    }

    void ShowMoreattributes()
    {
        displayMore = !displayMore;
    }

    private async Task SaveComment(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await AlarmService.UpdateAlarm(Tag);
            await JSRuntime.InvokeVoidAsync("saveComment", "snackbar");
        }
    }
}