@page "/Arm/{armId:int}"
@using System.Text.Json;
@using GPNA.AlarmControlSystem.Pages.Monitoring.Tables
@using GPNA.AlarmControlSystem.LocalDbStorage.Data.Interfaces
@using GPNA.ACSAPI.Repositories.Models
@inject IRestService RestService 

<div style="display:flex; justify-content:center;">
    <h3>@Title</h3>
    <div class="choice-group">
    <select @bind="@AlarmType">        
        <option value="Входящие">Входящие</option>
        <option value="Активные">Активные</option>
        <option value="Подавленные">Подавленные</option>
    </select>
    <a style="margin-left:20px;">C :</a>
        <input  type="datetime-local" @bind="From" @bind:format="yyyy-MM-ddTHH:mm">
        <a>По :</a>
        <input  type="datetime-local" @bind="To" @bind:format="yyyy-MM-ddTHH:mm">
    
    </div>
</div>

<div class="table-responsive" style="margin-top:10px;height:780px;overflow-y:scroll;border-top: 0.5px solid rgba(0, 65, 102, 0.2);border-bottom: 0.5px solid rgba(0, 65, 102, 0.2);">
    <table class="table table-striped table-bordered">
        @if (AlarmType == "Входящие")
        {
            <IncomingAlarms/>
        }

        @if (AlarmType == "Активные")
        {
            <ActiveAlarms/>
        }

        @if (AlarmType == "Подавленные")
        {
            <SuppressedAlarms/>
        }
        
    </table>
</div>

@code {
    [Parameter] public int ArmId { get; set; }
    [Parameter] public string? Title { get; set; }
    string? AlarmType = "Входящие";
    List<IncomingAlarm>? IncomingAlarms;
    string? Priority = "0";
    static DateTime From = new();
    static DateTime To = new();

    void SelectPriority()
    {

    }

    protected override void OnParametersSet()
    {
        switch (ArmId)
        {
            case 1:
                Title = "УПНГ";                
                break;
            case 2:
                Title = "БМУПН";
                break;
            case 3:
                Title = "Скважины";
                break;
            case 4:
                Title = "АРМ 4";
                break;

        }
    }

    protected override async Task OnInitializedAsync()    
    {  
        To = DateTime.Now.Date;
        From = To.AddDays(-1);
        
    }
}