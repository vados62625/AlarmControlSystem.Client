@using LocalDbStorage.Interfaces
@using LocalDbStorage.Repositories.Models
@using GPNA.AlarmControlSystem.Pages.Monitoring.Alarms
@using ActiveAlarmDto = LocalDbStorage.Dto.ActiveAlarmDto


<thead class="thead-light">
    <tr>
	    <th>Дата начала сигнализации</th>
	    @*   TODO временно endDate в контроллере не используется*@
    @*    <th>Дата окончания сигнализации</th>*@
        <th>Длительность (в часах)</th>
        <th colspan=2>Таг</th>
        <th colspan=4>Описание</th>
        <th>Приоритет 
            <select @bind="@Priority" @onabort="OnParametersSet">
                <option value="5">Все</option>
                <option value="4">Критический</option>
                <option value="3">Высокий</option>
                <option value="2">Низкий</option>
            </select>
        </th>
        <th>Уставка/Значение</th>        
    </tr>            
</thead>
<tbody>
    @if(Alarms == null)
    {
        <Loader/>
    }
    else
    {
        <Virtualize Items="Alarms" OverscanCount="10">           
            <ActiveAlarmComponent @key="context.Id" Tag="@context"/>            
        </Virtualize>
    }
</tbody>

@code {
    [Inject] IActiveAlarmService ActiveAlarmService { get; set; } = default!;

    [Parameter] public List<ActiveAlarmDto>? Alarms { get; set; }

    [Parameter] public int? Priority { get; set; } = 5;

    [CascadingParameter(Name = "From")] public DateTime From { get; set; }
    [CascadingParameter(Name = "To")] public DateTime To { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        Alarms = null;
        var activeAlarms= await ActiveAlarmService.GetAllAlarms();
        
	    Alarms = activeAlarms.OrderByDescending(c => c.DateTime).ToList();
        //if (Priority != 5)
        //{
        //    var alarms = new List<ActiveAlarm>();
        //    foreach (var item in Alarms ?? new List<ActiveAlarm>())
        //    {
        //        if (Convert.ToInt32(item.Priority) == Priority)
        //        {
        //            alarms.Add(item);
        //        }
        //    }
        //    Alarms = alarms;
        //}
    }
}
