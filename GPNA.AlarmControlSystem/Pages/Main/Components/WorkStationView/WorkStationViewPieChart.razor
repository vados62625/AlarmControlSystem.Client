@using GPNA.AlarmControlSystem.Application.Dto
@using GPNA.AlarmControlSystem.Models.Enums
@using GPNA.AlarmControlSystem.Pages.Main.Components.Charts
<div class="pie-chart">
    <p>
        @Title <b>@DateTime.ToString("dd MMMM")</b>
    </p>
    <div class="d-flex">
        <div class="pie-chart-diagram">
            <DoughnutChart Id="@Guid.NewGuid().ToString()" Data1="AllAlarmsCount" CenterText="@_centerText"/>
        </div>

        <div class="d-flex flex-column justify-content-between ps-3">
            <div class="pie-chart-stat">
                <div class="d-flex align-items-center">
                    <div class="pie-chart-stat-priority low"></div>
                    <p>Низкий</p>
                </div>
                <p>@(CountAlarms?[PriorityType.Low] ?? 0)</p>
            </div>
            <div class="pie-chart-stat">
                <div class="d-flex align-items-center">
                    <div class="pie-chart-stat-priority high"></div>
                    <p>Высокий</p>
                </div>
                <p>@(CountAlarms?[PriorityType.High] ?? 0)</p>
            </div>
            <div class="pie-chart-stat">
                <div class="d-flex align-items-center">
                    <div class="pie-chart-stat-priority critical"></div>
                    <p>Критичный</p>
                </div>
                <p>@(CountAlarms?[PriorityType.Urgent] ?? 0)</p>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public DateTimeOffset DateTime { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public Dictionary<PriorityType, int>? CountAlarms { get; set; }

    private string[] AllAlarmsCount { get; set; } = new string[3];

    private string _centerText { get; set; } = "0";

    protected override void OnParametersSet()
    {
        AllAlarmsCount[0] = CountAlarms?[PriorityType.Urgent].ToString() ?? "0";
        AllAlarmsCount[1] = CountAlarms?[PriorityType.High].ToString() ?? "0";
        AllAlarmsCount[2] = CountAlarms?[PriorityType.Low].ToString() ?? "0";

        _centerText = CountAlarms?
            .Where(c => c.Key is PriorityType.High or PriorityType.Low or PriorityType.Urgent)
            .Sum(c => c.Value)
            .ToString() ?? "0";

        base.OnParametersSet();
    }

}