@using GPNA.AlarmControlSystem.Application.Dto
@using GPNA.AlarmControlSystem.Models.Enums
@using GPNA.AlarmControlSystem.Pages.Main.Charts
<div class="pie-chart">
    <p>
        @Title <b>@DateTime.Now.ToString("dd MMMM")</b>
    </p>
    <div class="d-flex">
        <div class="pie-chart-diagram">
            <DoughnutChart Id="@Title.Replace(' ', '_')" Data1="AllAlarmsCount" />
        </div>

        <div class="d-flex flex-column justify-content-between ps-3">
            <div class="pie-chart-stat">
                <div class="d-flex align-items-center">
                    <div class="pie-chart-stat-priority low"></div>
                    <p>Низкий</p>
                </div>
                <p>@(CountAlarms?[PriorityType.Low] ?? 0)</p>
            </div>
            <div class="pie-chart-stat">
                <div class="d-flex align-items-center">
                    <div class="pie-chart-stat-priority high"></div>
                    <p>Высокий</p>
                </div>
                <p>@(CountAlarms?[PriorityType.High] ?? 0)</p>
            </div>
            <div class="pie-chart-stat">
                <div class="d-flex align-items-center">
                    <div class="pie-chart-stat-priority critical"></div>
                    <p>Критичный</p>
                </div>
                <p>@(CountAlarms?[PriorityType.Urgent] ?? 0)</p>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public DateTime DateTime { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public Dictionary<PriorityType, int>? CountAlarms { get; set; }

    private string[] AllAlarmsCount { get; set; } = new string[3];
    
    protected override void OnParametersSet()
    {
        if (CountAlarms != default)
        {
            AllAlarmsCount[0] = CountAlarms[PriorityType.Urgent].ToString();
            AllAlarmsCount[1] = CountAlarms[PriorityType.High].ToString();
            AllAlarmsCount[2] = CountAlarms[PriorityType.Low].ToString();
        }
        base.OnParametersSet();
    }

}