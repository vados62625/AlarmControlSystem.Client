@page "/{fieldId:int}"
@using GPNA.AlarmControlSystem.Pages.Main.Components.WorkStationView
@using GPNA.AlarmControlSystem.Models.Dto.Field
@using GPNA.AlarmControlSystem.Interfaces
@using GPNA.AlarmControlSystem.Models.Dto.Queries
@inject IJSRuntime JsRuntime


<div class="page-main">
    <div class="page-title">
        <ButtonNavigation Title="Меретояхинское"/>
        <div class="d-flex align-items-center">
            <p>ЖУРНАЛ СИГНАЛИЗАЦИЙ ЗА @DateTime.ToString("dd MMMM") МЕРЕТОЯХА <b>ТАЗОВСКОЕ</b></p>
            <SelectObject Object="dto"/>
        </div>
        <ButtonNavigation Title="Северо-Самбурское" Navigation="right"/>
    </div>
    @if (Field != default)
    {
        foreach (var workstation in Field.Workstations)
        {
            <WorkStationView Title=@workstation.Name/>
        }
    }
</div>

@code {

    [Parameter]
    public DateTimeOffset DateTime { get; set; } = DateTimeOffset.Now;

    [Parameter]
    public int FieldId { get; set; }

    [Inject]
    private IFieldService? FieldService { get; set; }

    public FieldMainPageDto? Field { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await InitializeField();

        await base.OnInitializedAsync();
    }

    private async Task InitializeField()
    {
        if (FieldService != null && FieldId != default)
        {
            var query = new GetAlarmsCountForFieldQuery { FieldId = FieldId, ActivationFrom = DateTime.AddDays(-7), ActivationTo = DateTime };

            var result = await FieldService.GetField(query);

            if (result.Success)
            {
                Field = result.Payload;
            }
        }
    }

}