@using Microsoft.AspNetCore.Components
@using GPNA.AlarmControlSystem.Models.Enums
@using GPNA.AlarmControlSystem.Interfaces
@using GPNA.AlarmControlSystem.Models.Dto.BufferAlarms
@inject IJSRuntime JSRuntime

@if(Tag is {TagName: { } })
{
    <tr class="item-table" @onclick="ShowMoreAttributes" style="cursor:pointer;">        
        <td>@Tag.DateTimeActivation.ToString("d") @Tag.DateTimeActivation.ToString("t")</td>
        <td>@(Tag.Duration?.TotalHours.ToString("N") ?? "N/A")</td>        
       
        <td colspan=2>@(Tag.TagName)
            @{
                string color = "";
                if (Tag.State == StateType.HH || Tag.State == StateType.LL)
                { color = "#EB3333"; }                    
                if (Tag.State == StateType.H || Tag.State == StateType.L)
                { color = "#F38B01"; } 
            }
            @if (Tag.State != StateType.none)
            { <span >_<b style="color: @color;">@Tag.State</b></span> }
        </td>
    
        <td colspan=4>@(Tag.Description ??= "N/A")</td>
        <td>@Tag.Priority</td>
        <td>@(Tag.AlarmLimit ?? "N/A") / @(Tag.Value ?? "N/A")</td>     
    </tr>        
    @if (_displayMore || Tag.Comment is {Length: > 0 })
    {
        <tr>
            <td colspan="10" class="p-0 m-0">
                <input type="text" style="margin:0;padding:5px 10px;width:100%" @bind="Tag.Comment" @bind:event="oninput" @onkeydown="SaveComment">
            </td>                        
        </tr>
    }
} 
@code
{
    [Inject] IBufferAlarmService AlarmService { get; set; } = null!;

    [Parameter] public ActiveAlarmDto? Tag { get; set; } = new ActiveAlarmDto();

    bool _displayMore = false;

    void ShowMoreAttributes()
    {
        _displayMore = !_displayMore;
    }

    private async Task SaveComment(KeyboardEventArgs e)
    {
        if (e.Code is "Enter" or "NumpadEnter")
        {
            if (Tag?.Comment != null)
            {
                await AlarmService.AddComment(Tag.Id, Tag.Comment);
                await JSRuntime.InvokeVoidAsync("saveComment", "snackbar");
            }
        }
    }
}