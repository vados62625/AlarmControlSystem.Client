@page "/authorization"
@using GPNA.AlarmControlSystem.Services
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AuthorizationService AuthorizationService
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager Navigation
@attribute [AllowAnonymous]

<h3>Авторизация...</h3>

@code {
    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState?.User?.Identity?.Name; //Получаем полное имя с доменом так

        if (user != null)
        {
            var savedToken = await ProtectedSessionStore.GetAsync<string>("apiToken");
            if (string.IsNullOrEmpty(savedToken.Value))
            {
                var apiToken = await AuthorizationService.GetAndSaveApiToken();
                if (!string.IsNullOrEmpty(apiToken))
                {
                    await ProtectedSessionStore.SetAsync("apiToken", apiToken);
                    Navigation.NavigateTo("/", forceLoad: true);
                }
            }
        }
    }
}