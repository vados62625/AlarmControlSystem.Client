@page "/tagtable"
@using LocalDbStorage.Repositories.Models
@using LocalDbStorage.Services
@using LocalDbStorage.Interfaces
@using GPNA.AlarmControlSystem.Pages.TagTable.Components
@inject ITagService TagService




<h3>Таблица переменных</h3>

<input type="text" id="myInput" @onkeypress="SearchTag" @bind="input" placeholder="Поиск по TagName">

@if (AlarmsTagTable == null)
{
    <Loader/>
}
else
{
    <div class="table-responsive" style="margin-top:10px;height:780px;overflow-y:scroll;border-top: 0.5px solid rgba(0, 65, 102, 0.2);border-bottom: 0.5px solid rgba(0, 65, 102, 0.2);">
        <table class="table table-striped table-bordered">
            <thead class="thead-light">
                <tr>
                    <th>Позиция по ГП</th>
                    <th>TagName</th>
                    <th>Описание</th>            
                    <th>Приоритет</th>
                    <th>Уставка</th>
                    <th>Несоответствия</th>                    
                </tr>
            </thead>
            <tbody>
                <Virtualize Items="AlarmsTagTable">
                    <ItemContent>
                        <TagOnTable @key="context.Id" Tag="@context"/>
                    </ItemContent>
                    <Placeholder>
                        <Loader/>
                    </Placeholder>
                </Virtualize>
            </tbody>
        </table>
    </div>   
}



@code {
    List<Tag>? AlarmsTagTable;

    string input = "";    

    async Task SearchTag()
    {
        await OnParametersSetAsync();
    }


    protected override async Task OnParametersSetAsync()
    {
	 
	    var tags = await TagService.GetAllTags();

        var alarmsTagTable = new List<Tag>(tags);

        if (input != "")
        {
            AlarmsTagTable = new();
            foreach (var context in alarmsTagTable)
            {
                @if (context != null && context.TagName != null)
                {
                    if (context.TagName.ToUpper().IndexOf(input.ToUpper()) > -1)
                    {
                        AlarmsTagTable.Add(context);
                    }                    
                }
            }
        }
        else 
        {
            AlarmsTagTable = alarmsTagTable;
        }
    
    }
}
