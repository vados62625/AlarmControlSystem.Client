@if (displayCorrectorTagModal)
{
	<div class="modal-backdrop show"></div>

		<div class="modal bg">
			<div class="modal-button-close">			
			<ButtonModal ActionSvg="close" ClickEvent="ClickCloseTag" ButtonType="close"></ButtonModal>
			</div>
			<p class="title">ЗАПРОС НА КОРРЕКТИРОВКИ</p>
			<div class="w-100 h-100 p-0 d-flex flex-column gap-2 justify-content-between">
				<div class="d-flex flex-column gap-2 align-items-end">
					<div class="d-flex gap-3 justify-content-end">
						<div class="item-container">
							<p>ФИО</p>
							<div class="small custom-select">
								<select class="small" style="color:rgba(0, 32, 51, 0.25)" onchange="this.style.color='#002033'">
									<option disabled selected hidden>Выберите получателя</option>
									<option>Получатель 1</option>
									<option>Получатель 2</option>
									<option>Получатель 3</option>
								</select>
							</div>						
						</div>
						<div class="item-container">
							<p>Должность</p>
							<input class="small" type="text" placeholder="Подставится автоматически" readonly>
						</div>
					</div>					
					<button class="button-adressee-add">
						<svg>
							<use href="/img/icons/icons.svg#tag-modal-add"></use>
						</svg>
						<p>Добавить</p>
					</button>					
				</div>
				<div class="item-container">
					<p>Тело письма</p>
					<input type="text" placeholder="Введите тело письма">
				</div>
				<div class="d-flex justify-content-between">
					<CorrectorTagInfoComponent Title="Текущая информация" MeaningDifferentStyle="red"></CorrectorTagInfoComponent>
					<CorrectorTagInfoComponent Title="Корректная информация"></CorrectorTagInfoComponent>					
				</div>
				<div class="bg-tag-info big">
					<p class="title">РЕГЛАМЕНТ</p>
					<div class="d-flex justify-content-between gap-5">
						<div class="d-flex flex-column gap-2 justify-content-between">
							<div class="item-container">
								<p>Потенциальные последствия</p>
								<textarea class="x2" type="text" placeholder="Введите потенциальные последствия"></textarea>
							</div>
							<div class="item-container">
								<p>Условия усиления</p>
								<textarea class="x2" type="text" placeholder="Введите условия усиления"></textarea>
							</div>
							<div class="item-container">
								<p>Время на реакцию</p>
								<input class="x2"type="text" placeholder="Введите время на реакцию">
							</div>

						</div>
						<div class="d-flex flex-column gap-2 justify-content-start">
							<div class="item-container @MeaningDifferentStyle">
								<p>Действия Полевого оператора</p>
								<textarea class="x2"type="text" placeholder="Введите действия полевого оператора"></textarea>
							</div>
							<div class="item-container">
								<p>Действия оператора АРМ</p>
								<textarea class="x2"type="text" placeholder="Введите действия оператора АРМ"></textarea>
							</div>
						</div>
					</div>
				</div>				
				<div class="button-container">					
					<ButtonModal Title="Разослать" ActionSvg="send" ClickEvent="ClickSaveTag"></ButtonModal>
					<ButtonModal Title="Отменить" ActionSvg="cancel" ClickEvent="ClickCloseTag"></ButtonModal>					
				</div>			
		</div>
	</div>		
	
}


@code {
	[Parameter] public string? MeaningDifferentStyle { get; set; } = "red";

	bool displayCorrectorTagModal = false;

	[Parameter] public EventCallback SaveTag { get; set; }
	[Parameter] public EventCallback CloseTag { get; set; }	

	public void Show() => displayCorrectorTagModal = true;
	public void Hide() => displayCorrectorTagModal = false;

	private async Task ClickSaveTag()
	{
		displayCorrectorTagModal = false;
	}

	private async Task ClickCloseTag()
	{
		displayCorrectorTagModal = false;
	}
}
