@    using GPNA.AlarmControlSystem.Pages.TagTable.Modals
@    using GPNA.AlarmControlSystem.Shared.Icons
@    using GPNA.AlarmControlSystem.Models.Dto
@    using GPNA.AlarmControlSystem.Models.Enums


<tr class="item-table" @onclick="ShowMoreattributes" style="cursor:pointer;">        
        <td colspan=2>
            @((Tag.State != StateType.none) 
            ? (Tag.TagName + "_" + Tag.State) 
            : (Tag.TagName))
        </td>
        <td colspan=6>@Tag.Description</td>
        <td>@Tag.Priority</td>
        <td class="@modificator">@Tag.AlarmLimit</td>
        <td style="padding: 0; padding-top: 8px;">
            <div style="display:flex; gap:8px; justify-content:center">
                <IconEditButton Tooltip="Изменить" ClickEvent="ClickEditTag" />
                <IconDeleteButton Tooltip="Удалить" ClickEvent="ClickDeleteTag" />                                    
            </div>                                
        </td>
    </tr>
                        
    @if (displayMore)
    {
    <tr>
        <td colspan="11" class="p-4 m-4">
                <p><b>Позиция по ГП: </b> @Tag.Position</p>
                <p><b>Потенциальные последствия: </b> @Tag.Consequence</p>
                <p><b>Действия Полевого оператора: </b>@Tag.ActionFieldOperator</p>
                <p><b>Действия Оператора АРМ: </b>@Tag.ActionArmOperator</p>
                <p><b>Уровень усиления: </b>@Tag.Inform</p>
                <p><b>Время на реакцию: </b>@Tag.ReactionTime</p>
        </td>                        
    </tr>
    }
@code
{
    [Parameter]
    public EventCallback<TagDto> EditTag { get; set; }
    [Parameter]
    public EventCallback<TagDto> DeleteTag { get; set; }

    [Parameter] public TagDto Tag { get; set; }

    bool displayMore = false;
    string modificator = "";

    protected override void OnParametersSet()
    {
        switch (Tag.Validate)
        {
            case ValidateType.NoneCheck:
                modificator = "item-table--normal";
                break;
            case ValidateType.NotValid:
                modificator = "item-table--alert";
                break;
            case ValidateType.NewTag:
                modificator = "item-table--warning";
                break;
            case ValidateType.Valid:
                modificator = "";
                break;
        }
    }

    void ShowMoreattributes()
    {
        displayMore = !displayMore;
    }

    private async Task ClickEditTag()
    {
        await EditTag.InvokeAsync(Tag);
    }
    private async Task ClickDeleteTag()
    {
        await DeleteTag.InvokeAsync(Tag);
    }


}