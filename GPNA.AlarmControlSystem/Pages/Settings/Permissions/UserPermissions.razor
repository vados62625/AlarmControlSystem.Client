@page "/settings/permissions"
@inherits AcsPageBase
@using GPNA.AlarmControlSystem.Pages.Settings.Permissions.Components
@using GPNA.AlarmControlSystem.Shared.ButtonsModal
@using GPNA.AlarmControlSystem.Models.Dto.User
@inject IJSRuntime JsRuntime


<div class="page-main">
    <div class="page-header justify-content-center">
        <div class="d-flex align-items-center">
            <p>
                Настройка ответственных
            </p>
        </div>
    </div>
    <table>
        <caption class="table-title">АДМИНИСТРАТОР (СУПЕРПОЛЬЗОВАТЕЛЬ)</caption>
        <thead>
        <tr class="table-head-line">
            <th class="table-head-user"><p>Должность</p></th>
    		
            <th class="table-head-user"><p>ФИО</p></th>
    		
            <th class="table-head-user"><p>Почта</p></th>
    		
            <th class="table-head-access"><p>Комментарии<br />мониторинг</p></th>
    		
            <th class="table-head-access"><p>Задачи</p></th>
    		
            <th class="table-head-access"><p>Таблица переменных</p></th>
    		
            <th class="table-head-access"><p>Изменние KPI</p></th>
    		
            <th class="table-head-access"><p>Комментарии журнал<br />изменений АСУ ТП</p></th>
    		
            <th class="table-head-access"><p>Назначать<br />ответственных</p></th>
        </tr>
        </thead>
        <tbody>
        @{
            using var adminsEnumerator = AdminModels.GetEnumerator();
            while (adminsEnumerator.MoveNext())
            {
                var user = adminsEnumerator.Current;
                <UserPermissionsLine @bind-User="user" Enabled="_editMode" LineRemoved="() => AdminModels.Remove(user)"/>
            }
        }
        @if (_editMode)
        {
            <tr>
                <td colspan="9">
                    <SettingsAddButton OnClick="() => AdminModels.Add(new UserDto())"/>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <table>
        <caption class="table-title">пользователи системы</caption>
        <thead>
        <tr class="table-head-line">
            <th class="table-head-user">
                <p>Должность</p></th>

            <th class="table-head-user">
                <p>ФИО</p></th>

            <th class="table-head-user">
                <p>Почта</p></th>

            <th class="table-head-access">
                <p>Комментарии<br/>мониторинг</p></th>

            <th class="table-head-access">
                <p>Задачи</p></th>

            <th class="table-head-access">
                <p>Таблица переменных</p></th>

            <th class="table-head-access">
                <p>Изменние KPI</p></th>

            <th class="table-head-access">
                <p>Комментарии журнал<br/>изменений АСУ ТП</p></th>

            <th class="table-head-access">
                <p>Назначать<br/>ответственных</p></th>
        </tr>
        </thead>
        <tbody>
            @{
                using var usersEnumerator = UserModels.GetEnumerator();
                while (usersEnumerator.MoveNext())
                {
                    var user = usersEnumerator.Current;
                    <UserPermissionsLine @bind-User="user" Enabled="_editMode" LineRemoved="() => UserModels.Remove(user)"/>
                }
            }
            @if (_editMode)
            {
                <tr>
                    <td colspan="9">
                        <SettingsAddButton OnClick="() => UserModels.Add(new UserDto())"/>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="settings-buttons-container">
        @if (!_editMode)
        {
            <EditButton ClickEvent="@(() => _editMode = true)" />
        }
        else
        {
            <SaveButton ClickEvent="OnSaveClick" />
            <CancelButton ClickEvent="OnCancelClick" />
        }
    </div>
    
    
</div>