@page "/reports"
@inject IJSRuntime JSRuntime


<div style="display:flex;align-items: center;    justify-content: space-evenly; ">
    <h3>@Title</h3>
    <div>
        <a style="margin-left:20px;">C :</a>
        <input  type="datetime-local" @bind="From" @bind:format="yyyy-MM-ddTHH:mm">
        <a>По :</a>
        <input  type="datetime-local" @bind="To" @bind:format="yyyy-MM-ddTHH:mm">
    </div>
    
    
    <div style="display:flex;gap:8px;">
        <div class="stat-box">
            <div class="stat-box__numbers">
                <span>N/A</span>
                <span style="color:#09B37B">+0%</span>
            </div>
            <span class="stat-box__desc">Общее количество сигнализаций</span>
        </div>
        <div class="stat-box">
            <div class="stat-box__numbers">
                <span>N/A</span>
                <span style="color:#09B37B">+0%</span>
            </div>
            <span class="stat-box__desc">УПНГ</span>
        </div>
        <div class="stat-box">
            <div class="stat-box__numbers">
                <span>N/A</span>
                <span style="color:#09B37B">+0%</span>
            </div>
            <span class="stat-box__desc">БМУПН</span>
        </div>
        <div class="stat-box">
            <div class="stat-box__numbers">
                <span>N/A</span>
                <span style="color:#09B37B">+0%</span>
            </div>
            <span class="stat-box__desc">Скважины</span>
        </div>
        <div class="stat-box">
            <div class="stat-box__numbers">
                <span>N/A</span>
                <span style="color:#09B37B">+0%</span>
            </div>
            <span class="stat-box__desc">Энергетика</span>
        </div>
    </div>

    <input type="number" @bind="inputKpi"/>
    <button class="btn-primary" style="margin-left:5px;" @onclick="ChangeKpi" >Изменить KPI</button>
</div>



<div>
    <h4>Количество сигнализаций за неделю</h4>
    <div style="height:340px;">
        <canvas id="chart1"></canvas>        
    </div>    
        
    <div style="display:flex;gap:20px;">
        <h4>Количество сигнализаций на АРМе</h4>
        <select >        
            <option value="УПНГ">УПНГ</option>
            <option value="БМУПН">БМУПН</option>
            <option value="Скважины">Скважины</option>
            <option value="Энергетика">Энергетика</option>
        </select>
    </div>
    
    <div style="height:340px;">
        <Chart2  Id = "chart2"
            Data1="@num1"  
            Data2="@num2"  
            Data3="@num3"
            Labels=@numTime> 
        </Chart2>
    </div>

</div>



@code {
    [Parameter] public string? Title { get; set; }

    Chart1 Chart1 = new();

    static DateTime From = new();
    static DateTime To = new();
    [Parameter] public static int kpi { get; set; } = 12;
    static int inputKpi = 12;


    string[] num1 = new string[168];
    string[] num2 = new string[168];
    string[] num3 = new string[168];
    string[] num4 = new string[168];
    [Parameter] public string[] num5 { get; set; } = new string[168];
    string[] num6 = new string[168];
    string[] num7 = new string[168];
    string[] num8 = new string[168];
    string[] numTime = new string[168];
    bool isRender = false;

    void ChangeKpi()=>kpi = inputKpi;

    protected override async Task OnParametersSetAsync()
    {
        var rand = new Random();

        for (int i = 0;i<168;i++)
        {            
            numTime[i] = (From.AddHours(i).ToString("M")+" " + From.AddHours(-168).AddHours(i).AddMinutes(-DateTime.Now.Minute).ToString("t"));

            num1[i]="0";
            num2[i]="0";
            num3[i]="0";
            num4[i]="0";
            num5[i]=kpi.ToString();
            num6[i]="0";
            num7[i]="0";
            num8[i]="0";
        }     
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var config = new
        {
            Type = "line",
            Options = new
            {
                Responsive = true,
                MaintainAspectRatio = false,

                Interaction = new
                {
                    Mode = "index"
                },
                Scales = new
                {
                    y = new
                    {
                        Display = true
                    },
                    x = new
                    {
                        Display = true,
                        Ticks = new
                        {
                            maxRotation = 25
                        }

                    }
                },
                Plugins = new
                {

                    Tooltip = new
                    {

                        Intersect = false,

                        BackgroundColor = "#fff",
                        BodyColor = "#11273B",
                        BorderWidth = 1,
                        BorderColor = "#97B2C4",
                        DisplayColors = true,
                        TitleColor = "#11273B",
                        TitleFont = new
                        {Size ="16"}
                    },
                    Legend = new
                    {
                        Display = true,
                        Position = "top"
                    },
                },
            },
            Data = new
            {
                Datasets = new[]
                {
                    new { Data = num1, BackgroundColor= "#56B9F2", BorderColor = "#56B9F2", BorderWidth = "2",PointRadius="0",Label = "УПНГ", borderDash = new []{0, 0}},
                    new { Data = num2, BackgroundColor= "#20B55F", BorderColor = "#20B55F", BorderWidth = "2",PointRadius="0",Label = "БМУПН", borderDash = new []{0, 0}},
                    new { Data = num3, BackgroundColor= "#B556FF", BorderColor = "#B556FF", BorderWidth = "2",PointRadius="0",Label = "УПНГ", borderDash = new []{0, 0}},
                    new { Data = num4, BackgroundColor= "#F2C94C", BorderColor = "#F2C94C", BorderWidth = "2",PointRadius="0",Label = "УПНГ", borderDash = new []{0, 0}},
                    new { Data = num5, BackgroundColor= "#EB3333", BorderColor = "#EB3333", BorderWidth = "2",PointRadius="0",Label = "KPI", borderDash = new []{5, 5}}
                },
                Labels = numTime
            }
        };

        if(firstRender)
            await JSRuntime.InvokeVoidAsync("setup3", "chart1", config);
        
    }

    protected override void OnInitialized()
    { 
        To = DateTime.Now.Date;
        From = To.AddDays(-6);    
    }
}
