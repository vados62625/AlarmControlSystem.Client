@using Blazored.Toast.Configuration
@using Blazored.Toast.Services
@using GPNA.AlarmControlSystem.Extensions
@using GPNA.AlarmControlSystem.Services
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using IAuthorizationService = GPNA.AlarmControlSystem.Interfaces.IAuthorizationService
@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthorizationService AuthorizationService
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<BlazoredToasts Position="ToastPosition.BottomRight"
                Timeout="10"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-thumbs-up"
                ErrorIcon="fa fa-bug"/>
<Spinner></Spinner>
<div class="page @theme">
    <header>
        <span class="logo @theme"></span>
        <span class="app-name">СУС Меретояха</span>

        <ul class="top-menu">
            <li class="top-menu_item">
                <NavLink class="top-menu_link" href="/" Match="NavLinkMatch.All">
                    Главная
                </NavLink>
            </li>
            <li class="top-menu_item">
                <NavLink class="top-menu_link" style="pointer-events: none;" href="Arm">
                    Мониторинг
                </NavLink>

                <ul class="sub-menu">
                    <li class="sub-menu_item">
                        <NavLink class="top-menu_link" href="Arm/1">
                            УПНГ
                        </NavLink>
                    </li>
                    <li class="sub-menu_item">
                        <NavLink class="top-menu_link" href="Arm/2">
                            БМУПН
                        </NavLink>
                    </li>
                    <li class="sub-menu_item">
                        <NavLink class="top-menu_link" href="Arm/3">
                            Скважины
                        </NavLink>
                    </li>
                    <li class="sub-menu_item">
                        <NavLink class="top-menu_link" href="Arm/4">
                            Энергетика
                        </NavLink>
                    </li>
                </ul>
            </li>
            <li class="top-menu_item">
                <NavLink class="top-menu_link" href="alarms-at-work">
                    Задачи
                </NavLink>
            </li>
            <li class="top-menu_item">
                <NavLink class="top-menu_link" href="archive">
                    Архив
                </NavLink>
            </li>
            <li class="top-menu_item">
                <NavLink class="top-menu_link" href="reports">
                    Отчеты
                </NavLink>
            </li>
            <li class="top-menu_item">
                <NavLink class="top-menu_link" href="tagtable">
                    Таблица переменных
                </NavLink>
            </li>
            <li class="top-menu_item">
                <NavLink class="top-menu_link" href="faq">
                    FAQ
                </NavLink>
            </li>
            <li class="top-menu_item">
                <NavLink class="top-menu_link" href="feedback">
                    Обратная связь
                </NavLink>
            </li>
        </ul>

        <div class="header-right-side">
            <span @onclick="ChangeTheme" class="theme-toggler @theme"></span>
            <LoginDisplay/>
        </div>
    </header>

    <div class="main">
        <div class="top-row px-4 auth">


        </div>

        <div class="content px-4">
            @Body
            <div id="snackbar">Комментарий сохранен</div>
        </div>
    </div>
</div>


@code {


    bool darkTheme = false;
    string theme = "light-theme";

    void ChangeTheme()
    {
        darkTheme = !darkTheme;
        if (darkTheme == true)
        {
            theme = "dark-theme";
        }
        else
        {
            theme = "light-theme";
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!await AuthorizationService.GetAuthorizationStatus())
        {
            ToastService.ShowError("Не удалось авторизоваться на сервере");
        }
    }
}